apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reporting-service.fullname" . }}
  labels:
    {{- include "reporting-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "reporting-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "reporting-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            {{- if .Values.auth }}
            - name: ORY_KETO_READ_URL
              value: '{{ include "common.backends.keto.readURL" . }}'
            {{- end }}
            - name: WATCH_RESOURCE_GROUP
              value: "{{ .Values.operator.resourceGroup }}"
            - name: WATCH_RESOURCE_VERSION
              value: '{{ .Values.operator.resourceVersion }}'
            - name: WATCH_RESOURCE_PLURAL
              value: '{{ .Values.operator.resourcePlural }}'
            - name: WATCH_NAMESPACE
              value: '{{ .Release.Namespace }}'
            - name: PORT
              value: "80"
            - name: DB_HOST
              value: "{{ .Values.dbHost }}"
            - name: DB_DATABASE
              value: "{{ .Values.dbName }}"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: dbUser
                  name: "{{ include "reporting-service.fullname" . }}-auth"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key:  dbPassword
                  name: "{{ include "reporting-service.fullname" . }}-auth"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

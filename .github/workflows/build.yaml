name: Publish image

on:
  release:
    types: [published]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
    -
      name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: |
          ghcr.io/${{ github.repository }}
        # For a release v1.2.3, we'll produce the following image tags
        #   v1.2.3
        #   1.2.3
        #   1.2
        #   latest
        # Semver pre-release versions are also supported
        # See also:
        # https://github.com/crazy-max/ghaction-docker-meta/tree/0a412843f87333854fa03a809b74056b64c6f31a#handle-semver-tag
        tag-semver: |
          {{raw}}
          {{version}}
          {{major}}.{{minor}}
        label-custom: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}/tree/${{ github.sha }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to GitHub Container Registry
      if: ${{ github.event_name == 'release' }}
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2.2.1
      with:
        push: ${{ github.event_name == 'release' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
    -
      name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        MSG_MINIMAL: true
        SLACK_TITLE: reporting service release ${{ github.event.release.name }} is ready
        SLACK_MESSAGE: ${{ github.event.release.body }}
